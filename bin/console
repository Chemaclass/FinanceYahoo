#!/usr/local/bin/php
<?php

declare(strict_types=1);

use App\Company\HtmlCrawler\Analysis\EarningsEstimateCrawler;
use App\Company\HtmlCrawler\Summary\CompanyFullNameCrawler;
use App\Company\HtmlCrawler\Summary\EstimateReturnCrawler;
use App\Company\HtmlSiteCrawler;
use App\Company\ReadModel\Ticker;
use App\Company\RootAppJsonCrawler;
use App\FinYahoo;
use Symfony\Component\HttpClient\HttpClient;

require dirname(__DIR__) . '/vendor/autoload.php';

Dotenv\Dotenv::createImmutable(__DIR__)->load();

$rootAppJsonCrawler = new RootAppJsonCrawler(
    'https://finance.yahoo.com/quote/%s',
    fn (array $json): array => [
        'RawPrice' => $json['context']['dispatcher']['stores']['QuoteSummaryStore']['financialData']['targetLowPrice']['raw'],
    ]
);

$summaryCrawler = new HtmlSiteCrawler(
    'https://finance.yahoo.com/quote/%s/summary',
    [
        'CompanyFullName' => new CompanyFullNameCrawler(),
        'EstimateReturn' => new EstimateReturnCrawler(),
    ]
);

$analysisCrawler = new HtmlSiteCrawler(
    'https://finance.yahoo.com/quote/%s/analysis',
    [
        'EarningsEstimate' => new EarningsEstimateCrawler(),
    ]
);

$financeYahoo = new FinYahoo(
    HttpClient::create(),
    $summaryCrawler,
    $analysisCrawler,
    $rootAppJsonCrawler
);

$companies = $financeYahoo->crawlStock(...createTickersFromEnv());

dump($companies);

/**
 * @return Ticker[] based on the .env TICKERS array
 */
function createTickersFromEnv(): array
{
    try {
        return array_map(
            static fn(string $symbol) => new Ticker($symbol),
            json_decode($_ENV['TICKERS'], true, 512, JSON_THROW_ON_ERROR)
        );
    } catch (JsonException $e) {
        die($e->getMessage());
    }
}
