#!/usr/local/bin/php
<?php

declare(strict_types=1);

use Chemaclass\FinanceYahoo\Domain\Crawler\JsonExtractor;
use Chemaclass\FinanceYahoo\Domain\Crawler\RootAppJsonCrawler;
use Chemaclass\FinanceYahoo\Domain\Notifier\Channel\EmailChannel;
use Chemaclass\FinanceYahoo\Domain\Notifier\NotifyResult;
use Chemaclass\FinanceYahoo\Domain\Notifier\Policy\NotifierPolicy;
use Chemaclass\FinanceYahoo\Domain\Notifier\Policy\PolicyGroup;
use Chemaclass\FinanceYahoo\Domain\ReadModel\Company;
use Chemaclass\FinanceYahoo\FinanceYahooConfig;
use Chemaclass\FinanceYahoo\FinanceYahooFacade;
use Chemaclass\FinanceYahoo\FinanceYahooFactory;
use Symfony\Component\HttpClient\HttpClient;
use Symfony\Component\Mailer\Bridge\Google\Transport\GmailSmtpTransport;
use Symfony\Component\Mailer\Mailer;

require_once dirname(__DIR__) . '/vendor/autoload.php';

Dotenv\Dotenv::createImmutable(__DIR__)->load();

function sendNotifications(FinanceYahooFacade $facade, array $policyGroupedBySymbol): NotifyResult
{
    $policy = new NotifierPolicy($policyGroupedBySymbol);

    return $facade->notify($policy, crawlStock($facade));
}

function crawlStock(FinanceYahooFacade $facade): array
{
    $siteCrawler = new RootAppJsonCrawler([
        'name' => new JsonExtractor\CompanyNameExtractor(),
        'price' => new JsonExtractor\PriceExtractor(),
        'trend' => new JsonExtractor\TrendExtractor(),
        'news' => new JsonExtractor\NewsExtractor(),
    ]);

    return $facade->crawlStock([$siteCrawler], ['AMZN']);
}

$facade = new FinanceYahooFacade(
    new FinanceYahooFactory(
        HttpClient::create(),
        new EmailChannel(
            $_ENV['TO_ADDRESS'],
            new Mailer(new GmailSmtpTransport(
                $_ENV['MAILER_USERNAME'],
                $_ENV['MAILER_PASSWORD']
            )),
        )
    )
);

print 'Sending notifications...' . PHP_EOL;

$result = sendNotifications($facade, [
    'AMZN' => new PolicyGroup([
        'high trend to buy' => static fn (Company $c) => $c->summary()['trend']->asArray()['buy'] > 25,
        'high trend to sell' => static fn (Company $c) => $c->summary()['trend']->asArray()['sell'] > 20,
    ]),
]);

dump($result);

print 'Done.' . PHP_EOL;
